<!DOCTYPE html>
<html lang="ru">
<head>
<meta charset="UTF-8">
<title>–ü—Ä–∞–≤–∞ –¥–ª—è –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤: –í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞</title>
<style>
  body { font-family: sans-serif; background: #eeeeff; margin: 0; }
  .game { max-width: 480px; margin: 2em auto; padding: 2em; background: #fff; border-radius: 12px; box-shadow: 0 0 20px #aaf2; }
  .characters { margin-bottom: 1em; }
  .map, .card-table { display: flex; gap: 6px; margin-bottom: 1em; }
  .cell { width: 42px; height: 42px; border: 1px solid #bdbdbd; display: flex; align-items: center; justify-content: center; font-size:1.2em;}
  .player { background: #3b6fc4; color: #fff; border-radius: 50%; padding: 2px 8px;}
  .npc { background: #fff0c4; border-radius: 8px; }
  button { margin: 6px 6px 0 0; padding: 0.5em 1.2em;}
  .modal { position: fixed; top:0; left:0;right:0;bottom:0; background: #0004; display:flex;align-items:center;justify-content:center; }
  .modal-content { background: #fff; padding:2em; border-radius:10px; max-width:90vw;}
  .cards {display:flex;gap:8px; flex-wrap:wrap;}
  .card {border:1px solid #999; background:#fafafc; padding:.5em 1em; border-radius:8px; margin-top:.5em;}
  .badge {background:#c7f2d1; color:#225b23;font-weight:bold; border-radius:6px; padding:2px 7px;}
</style>
</head>
<body>
<div class="game" id="root"></div>
<script>
// –ü—Ä–æ—Å—Ç–∞—è —Å–∏–º—É–ª—è—Ü–∏—è –∫–∞—Ä—Ç—ã: 3x3 –ø–æ–ª—è —Å –∑–∞–¥–∞—á–∞–º–∏
const locations = [
  [{t:"–í—Ö–æ–¥", event: "intro"}, {t: "ü§î", event: "law_keeper"}, {t: "–ó–∞–ª 1", event:null}],
  [{t: "–¢–µ—Å—Ç", event: "quiz"}, {t: "‚ôªÔ∏è", event:"crossword"}, {t:"–û—Ç–¥. –ó–∞–∫–æ–Ω–∞", event:null}],
  [{t:"–ó–¥–æ—Ä–æ–≤—å–µ", event: "health"}, {t:"üî•", event: "finale"}, {t:"–ß–∏—Ç–∞–ª—å–Ω—ã–π –∑–∞–ª",event:null}],
];

const cardsInfo = [
  {tag:"–ø—Ä–∞–≤–æ –Ω–∞ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", text:"–ö–∞–∂–¥—ã–π –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ –Ω–∞ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ."},
  {tag:"—Å–≤–æ–±–æ–¥–∞ –º–Ω–µ–Ω–∏–π", text:"–ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è —Å–≤–æ–±–æ–¥–∞ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –º–Ω–µ–Ω–∏–π."},
  {tag:"–ø—Ä–∞–≤–æ –Ω–∞ –º–µ–¥–ø–æ–º–æ—â—å", text:"–î–µ—Ç–∏ –∏–º–µ—é—Ç –ø—Ä–∞–≤–æ –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –º–µ–¥.–ø–æ–º–æ—â—å."},
];

function App(){
  const [player, setPlayer] = React.useState({x:0,y:0});
  const [modal, setModal] = React.useState(null);
  const [cards, setCards] = React.useState([]);
  const [xp, setXp] = React.useState(0);

  // simple level: xp<50 - –Ω–æ–≤–∏—á–æ–∫, <100 - –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å, >=100 - –ø—Ä–æ—Ñ–∏
  let level = "–ù–æ–≤–∏—á–æ–∫";
  if(xp>90) level="–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª"; else if(xp>40) level="–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å";

  function move(dx, dy){
    let nx = Math.max(0, Math.min(2, player.x+dx));
    let ny = Math.max(0, Math.min(2, player.y+dy));
    setPlayer({x:nx, y:ny});
    let loc = locations[ny][nx];
    if(loc.event){
      handleEvent(loc.event);
    }
  }

  function handleEvent(event){
    if(event === "intro") setModal({
      title:"–ü—Ä–∏–≤–µ—Ç, –ê—Ä—Ç–µ–º!",
      content:
        <>–¢—ã –≤ –Ω–µ–æ–±—ã—á–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–µ.<br/>–¢–≤–æ—è –∑–∞–¥–∞—á–∞: —Å–æ–±—Ä–∞—Ç—å –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –ø—Ä–∞–≤–∞–º–∏ –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –¥—É—Ö–æ–≤-–∑–∞–≥–∞–¥–æ—á–Ω–∏–∫–æ–≤!</>,
      btn:"–ü–æ–≥–Ω–∞–ª–∏!", onClose:()=>setModal(null)
    });
    else if(event==="law_keeper") setModal({
      title:"–ü–µ—Ä–≤—ã–π –∑–∞–≥–∞–¥–æ—á–Ω–∏–∫",
      content:<>–í—Ö–æ–¥ –∑–∞–∫—Ä—ã—Ç. –ß—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ –¥–∞–ª—å—à–µ, –ø–æ–¥–±–µ—Ä–∏ –∫–ª—é—á –∫ –∑–∞–º–∫—É.<br/><b>–í–æ–ø—Ä–æ—Å:</b> –í—ã–±–µ—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª—é—á<br/>
        <div style={{marginTop:8}}>
          <button onClick={()=>handleResult(0,false)}>–ö–ª—é—á —Å —Ä–∏—Å—É–Ω–∫–æ–º –∫–Ω–∏–≥–∏</button>
          <button onClick={()=>handleResult(0,true)}>–ö–ª—é—á –ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏</button>
        </div>
      </>,
      btn:null
    });
    else if(event==="quiz") setModal({
      title:"–î—É—Ö –ó–∞–∫–æ–Ω–∞",
      content:<>–ö–∞–∫–∞—è –∫–Ω–∏–≥–∞ ‚Äî –æ—Å–Ω–æ–≤–Ω–æ–π –∑–∞–∫–æ–Ω –†–§?<br/>
        <div style={{marginTop:8}}>
          <button onClick={()=>handleResult(1,false)}>–£–≥–æ–ª–æ–≤–Ω—ã–π –∫–æ–¥–µ–∫—Å</button>
          <button onClick={()=>handleResult(1,true)}>–ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏—è</button>
        </div>
      </>,
      btn:null
    });
    else if(event==="crossword") setModal({
      title:"–ú–∏–Ω–∏-–∫—Ä–æ—Å—Å–≤–æ—Ä–¥",
      content:<>–í–æ–ø—Ä–æ—Å –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏: –î–æ–∫—É–º–µ–Ω—Ç, –∑–∞–∫—Ä–µ–ø–ª—è—é—â–∏–π –ø—Ä–∞–≤–∞...<br/>
        <input id="cw1" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ"/><br/>
        –í–æ–ø—Ä–æ—Å –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏: –°–≤–æ–±–æ–¥–∞ –º—ã—Å–ª–µ–π ‚Äî —ç—Ç–æ...<br/>
        <input id="cw2" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ"/><br/>
        <button onClick={()=>handleResult(2,(document.getElementById('cw1').value.trim().toLowerCase()==="–∫–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏—è"&&document.getElementById('cw2').value.trim().toLowerCase()==="–º—ã—Å–ª—å"))}>–û—Ç–≤–µ—Ç–∏—Ç—å</button>
      </>,
      btn:null
    });
    else if(event==="health") setModal({
      title:"–ó–¥–æ—Ä–æ–≤—å–µ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
      content:<>–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Ä–Ω—ã–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:<br/>
        <label><input type="checkbox" id="ch1"/>–®–∫–æ–ª—å–Ω–∏–∫–∏ –æ–±—è–∑–∞–Ω—ã –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –º–µ–¥–æ—Å–º–æ—Ç—Ä</label><br/>
        <label><input type="checkbox" id="ch2"/>–†–æ–¥–∏—Ç–µ–ª–∏ –≤–ø—Ä–∞–≤–µ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –ø—Ä–∏–≤–∏–≤–æ–∫</label><br/>
        <label><input type="checkbox" id="ch3"/>–ú–µ–¥–ø–æ–º–æ—â—å —Ç–æ–ª—å–∫–æ –ø–ª–∞—Ç–Ω–∞—è</label><br/>
        <label><input type="checkbox" id="ch4"/>–î–µ—Ç–∏ –∏–º–µ—é—Ç –ø—Ä–∞–≤–æ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø—Å–∏—Ö–æ–ª–æ–≥–∞</label><br/>
        <label><input type="checkbox" id="ch5"/>–õ–µ—á–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –∑–∞ –¥–µ–Ω—å–≥–∏</label><br/>
        <label><input type="checkbox" id="ch6"/>–®–∫–æ–ª—ã –ø—Ä–æ–≤–æ–¥—è—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –æ—Å–º–æ—Ç—Ä—ã</label><br/>
        <button onClick={()=>handleResult(3,checkHealth())}>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
      </>,
      btn:null
    });
    else if(event==="finale") setModal({
      title:"–§–∏–Ω–∞–ª",
      content:
        <>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢—ã —Å–æ–±—Ä–∞–ª –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∏ —Å—Ç–∞–ª —ç–∫—Å–ø–µ—Ä—Ç–æ–º –ø–æ –ø—Ä–∞–≤–∞–º!<br/>
        <span class="badge">üèÜ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª!</span></>,
      btn:"–ó–∞–≤–µ—Ä—à–∏—Ç—å", onClose:()=>setModal(null)
    });
  }

  function handleResult(idx, ok){
    setModal({
      title: ok?"–ü—Ä–∞–≤–∏–ª—å–Ω–æ!":"–û—à–∏–±–∫–∞",
      content: ok?cardsInfo[idx] ?<><div className="card">{cardsInfo[idx].text}</div>–¢—ã –ø–æ–ª—É—á–∞–µ—à—å –∫–∞—Ä—Ç–æ—á–∫—É: <b>{cardsInfo[idx].tag}</b></> : <>–¢—ã –º–æ–ª–æ–¥–µ—Ü!</>:<>–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!</>,
      btn:"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
      onClose:()=>{
        setModal(null);
        if(ok && cardsInfo[idx] && !cards.find(c=>c.tag==cardsInfo[idx].tag)){
          setCards([...cards,cardsInfo[idx]]);
          setXp(xp+40);
        }
      }
    });
  }

  function checkHealth(){
    return (
      document.getElementById('ch1').checked &&
      document.getElementById('ch2').checked &&
      !document.getElementById('ch3').checked &&
      document.getElementById('ch4').checked &&
      !document.getElementById('ch5').checked &&
      document.getElementById('ch6').checked
    );
  }

  return (
    <div>
      <div className="characters">–¢—ã ‚Äî <b>–ê—Ä—Ç–µ–º</b> <span className="badge">{level}</span></div>
      <div className="map">
        {locations.map((row, y)=>
          <div key={y} style={{display:'flex', flexDirection:'column'}}>
            {row.map((loc,x)=>
              <div className="cell" key={x} style={{borderColor:(player.x==x&&player.y==y)?'#3b6fc4':'#bdbdbd'}}>
                {player.x==x && player.y==y? <span className="player">üôÇ</span> : null}
                {loc.event&&! (player.x==x&&player.y==y) ? <span className="npc">{loc.t}</span>: null}
              </div>
            )}
          </div>
        )}
      </div>
      <div>
        <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</b><br/>
        <button onClick={()=>move(0,-1)}>‚¨ÜÔ∏è</button>
        <button onClick={()=>move(-1,0)}>‚¨ÖÔ∏è</button>
        <button onClick={()=>move(1,0)}>‚û°Ô∏è</button>
        <button onClick={()=>move(0,1)}>‚¨áÔ∏è</button>
      </div>
      <div className="cards">
        {cards.map(card=><div className="card" key={card.tag}>{card.text}</div>)}
      </div>
      <div style={{marginTop:12}}>–û—á–∫–∏ –æ–ø—ã—Ç–∞: <b>{xp}</b></div>
      {modal?
        <div className="modal"><div className="modal-content"><h3>{modal.title}</h3>
        {modal.content}
        {modal.btn?<div><button onClick={modal.onClose || (()=>setModal(null))}>{modal.btn}</button></div>:null}</div></div>
      :null}
    </div>
  );
}

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ React —á–µ—Ä–µ–∑ CDN >>>
const script = document.createElement('script');
script.src = 'https://unpkg.com/react@18/umd/react.development.js';
document.body.appendChild(script);
const scriptd = document.createElement('script');
scriptd.src = 'https://unpkg.com/react-dom@18/umd/react-dom.development.js';
document.body.appendChild(scriptd);
scriptd.onload = ()=>{
  ReactDOM.createRoot(document.getElementById('root')).render(React.createElement(App));
}
</script>
</body>
</html>